diff --git a/src/App.vue b/src/App.vue
index 75fd11e..8e96c6c 100644
--- a/src/App.vue
+++ b/src/App.vue
@@ -34,6 +34,9 @@ import Problem from "@/modules/scoreboard/models/Problem";
 import ContestantProblem from "@/modules/scoreboard/models/ContestantProblem";
 
 export default defineComponent({
+  setup() {
+    document.title = "BSUIR Open XI. Scoreboard";
+  },
   name: "app",
   data() {
     return {
@@ -46,7 +49,7 @@ export default defineComponent({
     };
   },
   created() {
-    document.title = "Scoreboard";
+    // document.title = "Scoreboard";
     this.getContestData();
   },
   components: {
@@ -96,7 +99,7 @@ export default defineComponent({
             }
             this.updateNextSubmission(
               contestant,
-              contestant.problems[this.currentProblemIndex]
+              this.currentContestantProblem
             );
             this.updateScoreboard();
           } else {
@@ -218,9 +221,7 @@ export default defineComponent({
       if (submission === undefined) {
         submission = this.getNextSubmission(
           this.submissions,
-          this.contestants[this.currentContestantIndex].problems[
-            this.currentProblemIndex
-          ]
+          this.currentContestantProblem
         );
       }
       let contestantTitle = submission!.contestantName;
@@ -356,33 +357,29 @@ export default defineComponent({
     // },
   },
   watch: {
-    // currentProblemIndex(newValue: number, oldValue: number) {
-    //   console.log("currentProblemIndex changed");
-    //   if (newValue === -1) {
-    //     if (oldValue !== -1 && this.currentContestantIndex !== -1) {
-    //       this.contestants[this.currentContestantIndex].problems[
-    //         oldValue
-    //       ].isPending = false;
-    //       console.log("isPending false");
-    //     }
-    //   } else {
-    //     this.contestants[this.currentContestantIndex].problems[
-    //       newValue
-    //     ].isPending = true;
-    //     console.log("isPending true");
-    //   }
-    // },
+    currentProblemIndex(newValue: number, oldValue: number) {
+      console.log("currentProblemIndex changed");
+      if (newValue === -1) {
+        if (oldValue !== -1 && this.currentContestantIndex !== -1) {
+          this.contestants[this.currentContestantIndex].problems[
+            oldValue
+          ].isCurrent = false;
+          console.log("isCurrent false");
+        }
+      } else {
+        this.contestants[this.currentContestantIndex].problems[
+          newValue
+        ].isCurrent = true;
+        console.log("isCurrent true");
+      }
+    },
     isCurrentlyPending(newValue: boolean) {
-      console.log(`isCurrentlyPending changed on ${newValue}`);
       if (!newValue) {
-        if (
-          this.currentProblemIndex !== -1 &&
-          this.currentContestantIndex !== -1
-        ) {
-          this.currentContestantProblem.isPending = false;
-        }
+        this.currentContestantProblem.isPending = false;
+        console.log(`isCurrentlyPending changed on false`);
       } else {
         this.currentContestantProblem.isPending = true;
+        console.log(`isCurrentlyPending changed on true`);
       }
     },
   },
@@ -390,14 +387,84 @@ export default defineComponent({
 </script>
 
 <style>
+/* oswald-regular - cyrillic_latin */
+@font-face {
+  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
+  font-family: "Oswald";
+  font-style: normal;
+  font-weight: 400;
+  src: url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-regular.eot"); /* IE9 Compat Modes */
+  src: url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-regular.eot?#iefix")
+      format("embedded-opentype"),
+    /* IE6-IE8 */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-regular.woff2")
+      format("woff2"),
+    /* Super Modern Browsers */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-regular.woff")
+      format("woff"),
+    /* Modern Browsers */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-regular.ttf")
+      format("truetype"),
+    /* Safari, Android, iOS */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-regular.svg#Oswald")
+      format("svg"); /* Legacy iOS */
+}
+/* oswald-500 - cyrillic_latin */
+@font-face {
+  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
+  font-family: "Oswald";
+  font-style: normal;
+  font-weight: 500;
+  src: url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-500.eot"); /* IE9 Compat Modes */
+  src: url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-500.eot?#iefix")
+      format("embedded-opentype"),
+    /* IE6-IE8 */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-500.woff2")
+      format("woff2"),
+    /* Super Modern Browsers */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-500.woff")
+      format("woff"),
+    /* Modern Browsers */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-500.ttf")
+      format("truetype"),
+    /* Safari, Android, iOS */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-500.svg#Oswald")
+      format("svg"); /* Legacy iOS */
+}
+/* oswald-600 - cyrillic_latin */
+@font-face {
+  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
+  font-family: "Oswald";
+  font-style: normal;
+  font-weight: 600;
+  src: url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-600.eot"); /* IE9 Compat Modes */
+  src: url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-600.eot?#iefix")
+      format("embedded-opentype"),
+    /* IE6-IE8 */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-600.woff2")
+      format("woff2"),
+    /* Super Modern Browsers */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-600.woff")
+      format("woff"),
+    /* Modern Browsers */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-600.ttf")
+      format("truetype"),
+    /* Safari, Android, iOS */
+      url("@/assets/fonts/oswald/oswald-v49-cyrillic_latin-600.svg#Oswald")
+      format("svg"); /* Legacy iOS */
+}
+
 * {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
+  font-family: "Oswald", sans-serif;
+  font-size: 40px;
 }
 
 #app {
   padding: 10px;
+  background-color: #f3e1b8;
 }
 
 .app__scoreboard:focus {
diff --git a/src/modules/scoreboard/components/Header.vue b/src/modules/scoreboard/components/Header.vue
index 8669bda..95f0f4f 100644
--- a/src/modules/scoreboard/components/Header.vue
+++ b/src/modules/scoreboard/components/Header.vue
@@ -5,18 +5,6 @@
         {{ contest.title }}
       </div>
     </div>
-    <div class="header__body">
-      <div class="header__rank">Rank</div>
-      <div class="header__contestant_name">Name</div>
-      <div class="header__problems_title">Problems</div>
-      <template v-if="contest.type === 'ICPC'">
-        <div class="header__icpc">
-          <div class="header__solved">Solved</div>
-          <div class="header__penalty">Penalty</div>
-        </div>
-      </template>
-      <div class="header__points" v-if="contest.type === 'IOI'">Points</div>
-    </div>
   </div>
 </template>
 
@@ -27,7 +15,7 @@ import ScoreboardGetterEnum from "@/store/modules/scoreboard/types/getter-types"
 
 export default defineComponent({
   computed: {
-    ...mapGetters('scoreboard', {
+    ...mapGetters("scoreboard", {
       contest: ScoreboardGetterEnum.GET_CONTEST,
     }),
   },
@@ -46,7 +34,9 @@ export default defineComponent({
 }
 
 .header__contest_title {
-  font-weight: bold;
+  font-weight: 600;
+  font-size: 48px;
+  color: #dd430f;
 }
 
 .header__head {
diff --git a/src/modules/scoreboard/components/ProblemCell.vue b/src/modules/scoreboard/components/ProblemCell.vue
index 2927aba..a4ba83b 100644
--- a/src/modules/scoreboard/components/ProblemCell.vue
+++ b/src/modules/scoreboard/components/ProblemCell.vue
@@ -1,16 +1,25 @@
 <template>
   <div
-    class="problem"
+    class="problem-box"
     :class="{
-      problem__solved: problem.solved === true,
-      problem__tried: problem.haveNextSubmission === true,
-      problem__no_attempt: problem.wasAttempt === false,
-      problem__first_accepted: problem.firstAccepted === true,
-      problem__highlight: isHighlighting,
+      'probem-current': problem.isCurrent && problem.haveNextSubmission,
     }"
   >
-    <div class="problem__text">
-      {{ getDisplayText() }}
+    <div class="problem-title">{{ problem.index }}</div>
+    <div
+      class="problem-data"
+      :class="{
+        problem__solved: problem.solved === true,
+        'problem__have-try': problem.haveNextSubmission === true,
+        'problem__no-attempt': problem.wasAttempt === false,
+        'problem__first-accepted': problem.firstAccepted === true,
+        problem__highlight: isHighlighting,
+        'problem__highlight-transition': problem.isPending,
+      }"
+    >
+      <div class="problem__text">
+        {{ getDisplayText() }}
+      </div>
     </div>
   </div>
 </template>
@@ -43,17 +52,26 @@ export default defineComponent({
   methods: {
     getDisplayText(): string {
       if (this.problem.wasAttempt === false) {
-        return `${this.problem.index}`;
+        return ".";
       }
-      if (this.contestType === "ICPC") {
-        if (this.problem.haveNextSubmission === true) {
-          return `${this.problem.index} - ${
-            this.problem.incorrectAttempts + 1
-          }?`;
+      if (this.problem.solved) {
+        if (this.contestType === "ICPC") {
+          return `+${
+            this.problem.incorrectAttempts === 0
+              ? ""
+              : this.problem.incorrectAttempts
+          }`;
+        }
+      }
+      if (this.problem.haveNextSubmission === true) {
+        if (this.contestType === "ICPC") {
+          return `?${this.problem.incorrectAttempts + 1}`;
         }
-        return `${this.problem.index} - ${this.problem.incorrectAttempts}`;
       }
-      return `${this.problem.index} - ${this.problem.points}`;
+      if (this.contestType === "ICPC") {
+        return `-${this.problem.incorrectAttempts}`;
+      }
+      return "something bad";
     },
   },
   watch: {
@@ -78,29 +96,52 @@ export default defineComponent({
 </script>
 
 <style scoped>
-.problem {
-  background-color: #ff4848;
-  padding: 5px 10px;
-  border-radius: 20px;
+.problem-title {
+  color: #345e5a;
+}
+.problem-box {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  gap: 15px;
+  padding: 7px 8px;
 }
-.problem__tried {
-  background-color: yellow;
+.problem-data {
+  background-color: #dd430f;
+  padding: 2px 20px;
+  border-radius: 10px;
+  color: #f3e1b8;
+}
+.problem__have-try {
+  background-color: #eda96c;
 }
 
 .problem__solved {
-  background-color: #00c900;
+  background-color: #3c817a;
 }
 
-.problem__no_attempt {
-  background-color: gray;
+.problem__no-attempt {
+  background-color: #f3e1b8;
+  border: 3px solid #3c817a;
+  color: #3c817a;
 }
 
-.problem__first_accepted {
+.problem__first-accepted {
   background-color: #009700;
   border: 3px solid #ff0000;
 }
 
 .problem__highlight {
-  border: 3px solid #1900ff;
+  /* background-color: #e1893a; */
+  background-color: #c86d1e;
+}
+
+.probem-current {
+  border: 3px solid #3c817a;
+  border-radius: 15px;
+}
+
+.problem__highlight-transition {
+  transition: 500ms linear;
 }
 </style>
diff --git a/src/modules/scoreboard/components/Scoreboard.vue b/src/modules/scoreboard/components/Scoreboard.vue
index 17f9280..0089f70 100644
--- a/src/modules/scoreboard/components/Scoreboard.vue
+++ b/src/modules/scoreboard/components/Scoreboard.vue
@@ -1,18 +1,20 @@
 <template>
   <div class="scoreboard">
     <Header class="scoreboard__header"></Header>
-    <TransitionGroup name="flip-list">
-      <TableRow
-        v-for="[index, contestant] in contestants.entries()"
-        :key="contestant.id"
-        :contestant="contestant"
-        class="scoreboard__row"
-        :class="{
-          scoreboard__current_contestant: currentContestantIndex === index,
-        }"
-        :contestType=contestType
-      ></TableRow>
-    </TransitionGroup>
+    <div class="contestants">
+      <TransitionGroup name="flip-list">
+        <TableRow
+          v-for="[index, contestant] in contestants.entries()"
+          :key="contestant.id"
+          :contestant="contestant"
+          class="scoreboard__row"
+          :class="{
+            scoreboard__current_contestant: currentContestantIndex === index,
+          }"
+          :contestType="contestType"
+        ></TableRow>
+      </TransitionGroup>
+    </div>
   </div>
 </template>
 
@@ -41,7 +43,7 @@ export default defineComponent({
     contestantMoveDuration() {
       return `${this.clickCoolDown}ms`;
     },
-    ...mapGetters('scoreboard', {
+    ...mapGetters("scoreboard", {
       contest: ScoreboardGetterEnum.GET_CONTEST,
       clickCoolDown: ScoreboardGetterEnum.GET_CLICK_COOL_DOWN,
       contestants: ScoreboardGetterEnum.GET_CONTESTANTS,
@@ -53,8 +55,16 @@ export default defineComponent({
 </script>
 
 <style scoped>
+.contestants {
+  display: flex;
+  flex-direction: column;
+  gap: 40px;
+  margin-top: 40px;
+}
 .scoreboard__row {
-  margin-top: 10px;
+  /* height: 262px; */
+  padding: 20px 30px 30px;
+  border: 2px solid #345e5a;
 }
 
 .flip-list-move {
@@ -62,6 +72,6 @@ export default defineComponent({
 }
 
 .scoreboard__current_contestant {
-  border: 2px solid black;
+  border: 5px solid #345e5a;
 }
 </style>
diff --git a/src/modules/scoreboard/models/ContestantProblem.ts b/src/modules/scoreboard/models/ContestantProblem.ts
index 54092a8..0a4eef1 100644
--- a/src/modules/scoreboard/models/ContestantProblem.ts
+++ b/src/modules/scoreboard/models/ContestantProblem.ts
@@ -9,4 +9,5 @@ export default interface ContestantProblem {
   lastSubmissionTime: number;
   haveNextSubmission: boolean;
   isPending: boolean;
+  isCurrent: boolean;
 }
diff --git a/src/parsers/solve/solve.ts b/src/parsers/solve/solve.ts
index 07011bd..df94ddb 100644
--- a/src/parsers/solve/solve.ts
+++ b/src/parsers/solve/solve.ts
@@ -9,7 +9,7 @@ import solveParticipants from "./solve-participants.js";
 import solveSolutions from "./solve-solutions.js";
 
 export const solveContest: Contest = {
-  title: "Computer Science Cup: Квалификация",
+  title: "BSUIR OPEN XI. Students finals",
   duration: 18000,
   freezeTime: 14400,
   type: "ICPC",
@@ -62,6 +62,7 @@ export function getSolveContestants(): Array<Contestant> {
             lastSubmissionTime: 0,
             haveNextSubmission: false,
             isPending: false,
+            isCurrent: false,
           };
         }
       );
